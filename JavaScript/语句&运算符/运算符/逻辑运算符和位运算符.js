/*******************************
逻辑"与"运算符（&&）
运算方法：
只要“&&”前面是false，无论“&&”后面是true还是false，结果都将返“&&”前面的值;
只要“&&”前面是true，无论“&&”后面是true还是false，结果都将返“&&”后面的值;

逻辑"或"运算符（||）
运算方法：
只要“||”前面为false,不管“||”后面是true还是false，都返回“||”后面的值。
只要“||”前面为true,不管“||”后面是true还是false，都返回“||”前面的值。
***********************/
undefined && 9/2
undefined

undefined && true
undefined

'1' && 9/2
4.5

[1,2] && 9/2
4.5

[] && 9/2
4.5

[] && true
true
[] && false
false


/*******************************
**********按位与 运算符（&）*****************
******************************************/
/*
4.04&0
0
4.04|0
4
*/
// 参加运算的两个数据，按二进制位进行“与”运算。
/*
运算规则：0&0=0;  0&1=0;   1&0=0;    1&1=1;

      即：两位同时为“1”，结果才为“1”，否则为0

例如：3&5  即 0000 0011& 0000 0101 = 00000001  因此，3&5的值得1。


另，负数按补码形式参加按位与运算。

“与运算”的特殊用途：

（1）清零。如果想将一个单元清零，即使其全部二进制位为0，只要与一个各位都为零的数值相与，结果为零。

（2）取一个数中指定位

方法：找一个数，对应X要取的位，该数的对应位为1，其余位为零，此数与X进行“与运算”可以得到X中的指定位。

例：设X=10101110，

   取X的低4位，用 X & 0000 1111 = 00001110 即可得到；

   还可用来取X的2、4、6位。
*/


/*****************************************
**********按位或 运算符（|）*****************
******************************************/
/*参加运算的两个对象，按二进制位进行“或”运算。

运算规则：0|0=0；  0|1=1；  1|0=1；   1|1=1；

     即 ：参加运算的两个对象只要有一个为1，其值为1。

例如:3|5　即 00000011 | 0000 0101 = 00000111  因此，3|5的值得7。　

另，负数按补码形式参加按位或运算。

“或运算”特殊作用：

（1）常用来对一个数据的某些位置1。

方法：找到一个数，对应X要置1的位，该数的对应位为1，其余位为零。此数与X相或可使X中的某些位置1。

例：将X=10100000的低4位置1 ，用X | 0000 1111 = 1010 1111即可得到。
*/
